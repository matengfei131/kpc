import {getRestProps} from '../utils';
import {makeStyles} from './styles';

const {
    className, disabled, trueValue, style,
    children, value, ref, key, title, ...rest
} = this.get();
const isChecked = value === trueValue;

const classNameObj = {
    'k-radio': true,
    'k-disabled': disabled,
    'k-checked': isChecked,
    [className]: className,
    [makeStyles()]: true,
};

// let evClick;
const events = [
    'ev-click', 'ev-change',
    'ev-mouseenter', 'ev-mouseleave'
].reduce((memo, name) => {
    if (rest[name]) {
        if (name === 'ev-click' || name === 'ev-change') {
            // don't bind click to label, otherwise it will trigger click event twice
            // don't bind change to input, use click instead of, #448
            // evClick = rest[name];
        } else {
            memo[name] = rest[name];
        }
        delete rest[name];
    }
    return memo;
}, {});

<label {...events}
    class={classNameObj}
    style={style}
    title={title}
    tabindex={disabled ? "-1" : "0"}
    ev-keypress={this.onKeypress}
    ev-click={this.fixClick}
>
    <span class="k-radio-wrapper">
        <input
            { ...getRestProps(this, rest) }
            type="radio"
            disabled={disabled}
            value={trueValue}
            tabindex="-1"
            ref={this.elementRef}
            checked={isChecked}
            ev-click={this.onClick}
        />
    </span>
    <span class="k-radio-text" v-if={children}>{children}</span>
</label>
